https://leetcode.com/problems/number-of-longest-increasing-subsequence/


class Solution {
public:
    int findNumberOfLIS(vector<int>& nums) {
        int n=nums.size();

        vector<int>dp(n,1),freq(n,1);
      int maxi=1;
        for(int i=0;i<n;i++){

            for(int j=0;j<i;j++){

                if(nums[i]>nums[j] && dp[i]<dp[j]+1){
                    dp[i]=dp[j]+1;
                    freq[i]=freq[j];
                }
                else if(nums[i]>nums[j] && dp[i]==dp[j]+1){
                freq[i]+=freq[j];
                }
            }
            maxi=max(maxi,dp[i]);
        }
          int cnt=0;
        for(int i=0;i<n;i++){
            if(dp[i]==maxi){
                 cnt+=freq[i];
            }
        }

        return cnt;
    }
};
